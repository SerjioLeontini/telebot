import telebot
import requests
import json
from telebot import types
from datetime import datetime

#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
bot = telebot.TeleBot('')

#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å—É
headers = {""}

# –ö–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É
markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
markup_new_or_not = types.ReplyKeyboardMarkup(resize_keyboard = True)
item1 = types.KeyboardButton("–°–µ–π—á–∞—Åüïë")
item2 = types.KeyboardButton("–ù–∞ –¥–µ–Ω—åüåé")
item3 = types.KeyboardButton("–ù–∞ 5Ô∏è‚É£ –¥–Ω–µ–π")
item1_1 = types.KeyboardButton("–í —ç—Ç–æ–º –∂–µüé≤")
item2_1 = types.KeyboardButton("–í –¥—Ä—É–≥–æ–ºüö´")
markup.add(item1, item2, item3)
markup_new_or_not.add(item1_1, item2_1)
reply_markup = types.ReplyKeyboardRemove()

#–°–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
#–ü–µ—Ä–µ–≤–æ–¥
trans = {
	"clear" : "—è—Å–Ω–æ",
	"partly-cloudy" : "–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ",
	"cloudy" : "–æ–±–ª–∞—á–Ω–æ",
	"overcast" : "–ø–∞—Å–º—É—Ä–Ω–æ",
	"drizzle" : "–º–æ—Ä–æ—Å—å",
	"light-rain" : "–ª–µ–≥–∫–∏–π –¥–æ–∂–¥—å",
	"rain" : "–¥–æ–∂–¥—å",
	"moderate-rain" : "–Ω–µ—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
	"heavy-rain" : "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
	"continuous-heavy-rain" : "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
	"showers" : "–ª–∏–≤–µ–Ω—å",
	"wet-snow" : "–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º",
	"light-snow" : "–ª–µ–≥–∫–∏–π —Å–Ω–µ–≥",
	"snow" : "—Å–Ω–µ–≥",
	"snow-showers" : "—Å–Ω–µ–≥–æ–ø–∞–¥",
	"hail" : "–≥—Ä–∞–¥",
	"thunderstorm" : "–≥—Ä–æ–∑–∞",
	"thunderstorm-with-rain" : "–≥—Ä–æ–∑–∞ —Å–æ —Å–Ω–µ–≥–æ–º",
	"thunderstorm-with-hail" : "–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º"
}

#–£—Å–ª–æ–≤–∏–µ –¥–ª—è —ç–º–æ–¥–∑–∏
emodzi = {
	"clear" : "‚òÄ",
	"partly-cloudy" : "üå§",
	"cloudy" : "üå•",
	"overcast" : "‚òÅ",
	"drizzle" : "üåÇ",
	"light-rain" : "‚òÇ",
	"rain" : "üíß",
	"moderate-rain" : "‚òÇ",
	"heavy-rain" : "‚òî",
	"continuous-heavy-rain" : "üí¶",
	"showers" : "üí¶",
	"wet-snow" : "üå®",
	"light-snow" : "‚ùÑ",
	"snow" : "‚ùÑ",
	"snow-showers" : "‚òÉ",
	"hail" : "üåß",
	"thunderstorm" : "üå©",
	"thunderstorm-with-rain" : "‚õà",
	"thunderstorm-with-hail" : "‚õà"
}

#–í–µ—Ç–µ—Ä
wind_trans = {
	"nw" : "—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π",
	"n" : "—Å–µ–≤–µ—Ä–Ω—ã–π",
	"ne" : "—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
	"e" : "–≤–æ—Å—Ç–æ—á–Ω—ã–π",
	"se" : "—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
	"s" : "—é–∂–Ω—ã–π",
	"sw" : "—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π",
	"w" : "–∑–∞–ø–∞–¥–Ω—ã–π",
	"c" : "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
}

moon_trans = {
	"moon-code-0" : "–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µüåï",
	"moon-code-1" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåñ",
	"moon-code-2" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåñ",
	"moon-code-3" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåñ",
	"moon-code-4" : "–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å –ª—É–Ω—ãüåó",
	"moon-code-5" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåò",
	"moon-code-6" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåò",
	"moon-code-7" : "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞üåò",
	"moon-code-8" : "–ù–æ–≤–æ–ª—É–Ω–∏–µüåë",
	"moon-code-9" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåí",
	"moon-code-10" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåí",
	"moon-code-11" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåí",
	"moon-code-12" : "–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å –ª—É–Ω—ãüåì",
	"moon-code-13" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåî",
	"moon-code-14" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåî",
	"moon-code-15" : "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞üåî",
}

#–ú–µ—Å—è—Ü–∞
month = {
	1 : "—è–Ω–≤–∞—Ä—è",
	2 : "—Ñ–µ–≤—Ä–∞–ª—è",
	3 : "–º–∞—Ä—Ç–∞",
	4 : "–∞–ø—Ä–µ–ª—è",
	5 : "–º–∞—è",
	6 : "–∏—é–Ω—è",
	7 : "–∏—é–ª—è",
	8 : "–∞–≤–≥—É—Å—Ç–∞",
	9 : "—Å–µ–Ω—Ç—è–±—Ä—è",
	10 : "–æ–∫—Ç—è–±—Ä—è",
	11 : "–Ω–æ—è–±—Ä—è",
	12 : "–¥–µ–∫–∞–±—Ä—è"
}

#–¶–∏—Ñ—Ä—ã
nums = {
	0: "0‚É£",
	1: "1‚É£",
	2: "2‚É£",
	3: "3‚É£",
	4: "4‚É£",
	5: "5‚É£",
	6: "6‚É£",
	7: "7‚É£",
	8: "8‚É£",
	9: "9‚É£"
}

#–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def welcome(message):
	#–°—Ç–∏–∫–µ—Ä
	sti = open('img/welcome.webp', 'rb')
	bot.send_sticker(message.chat.id, sti)

	#–°–æ–æ–±—â–µ–Ω–∏–µ
	hello = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –º–∏—Ä–∞!\n –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É?".format(message.from_user, bot.get_me()), 
		parse_mode='html', reply_markup = reply_markup)

#–°–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=['text'])
def city_of_weather(message):
	#–ì–æ—Ä–æ–¥
	global city
	city = message.text

	#–ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É
	google_url = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?key=AIzaSyBRIZSlQ0_HbNKMkHE-DqPV1VM5N8N0fO4&input='+str(city)+'&inputtype=textquery&language=RU&fields=geometry'
	global req
	req = requests.get(google_url)

	#–ï—Å–ª–∏ –Ω–∞—à–µ–ª
	if json.loads(req.text)["status"] == "OK":
		#–î–∞–ª–µ–µ
		period = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥üåù", reply_markup = markup)
		bot.register_next_step_handler(period, type_of_weather)
	#–ï—Å–ª–∏ –Ω–µ –Ω–∞—à–µ–ª
	else:
		#–°—Ç–∏–∫–µ—Ä
		sti = open('img/error.webp', 'rb')
		bot.send_sticker(message.chat.id, sti)
		#–î–∞–ª–µ–µ
		error = bot.send_message(message.chat.id, "–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞üò¢ –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!", reply_markup = reply_markup)
		bot.register_next_step_handler(error, city_of_weather)

		

#–ù–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥
def type_of_weather(message):
	if message.chat.type == 'private':
		if message.text == '–°–µ–π—á–∞—Åüïë':
			#–ó–∞–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
			lat = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lat"]
			lng = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lng"]
			#–ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π
			yandex_url = 'https://api.weather.yandex.ru/v2/forecast?lat='+str(lat)+'&lon='+str(lng)+'&lang=ru_RU&hours=false&extra=false'
			ya_req = requests.get(yandex_url, headers=headers)
			inf = json.loads(ya_req.text)['fact'] #–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è

			#–ü–∞—Ä–∞–º–µ—Ç—Ä—ã
			temp_now = inf['temp']
			feels_temp_now = inf['feels_like']
			condition = inf['condition']
			wind = inf['wind_speed']
			wind_dir = inf['wind_dir']
			press = inf['pressure_mm']

			#–£—Å–ª–æ–≤–∏–µ –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
			if feels_temp_now <= 0:
				itog = "–ó–∏–º–∞–∞–∞–∞–∞‚ùÑÔ∏è"
			elif feels_temp_now > 0 and feels_temp_now <= 10:
				itog = "–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ, –æ–¥–Ω–∞–∫–æüß•"
			elif feels_temp_now > 10 and feels_temp_now <= 16:
				itog = "–Ø –±—ã –Ω–∞–∫–∏–Ω—É–ª –∫—É—Ä—Ç–æ—á–∫—Éüß£"
			elif feels_temp_now > 16 and feels_temp_now <= 22:
				itog = "–ü–æ—á—Ç–∏ —Ç–µ–ø–ª–æ‚õÖÔ∏è"
			elif feels_temp_now > 22 and feels_temp_now <= 28:
				itog = "–£—Ñ, –ª–µ—Ç–æ –Ω–∞ –¥–≤–æ—Ä–µ‚òÄÔ∏è"
			elif feels_temp_now > 28:
				itog = "–ñ–∞—Ä–∞–∞–∞–∞–∞–∞–∞üî•"

			

			#–ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			bot.send_message(message.chat.id, "–í –≥–æ—Ä–æ–¥–µ {0} {1}{8}.\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {2} C¬∞. –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {3} C¬∞.üå°\n–í–µ—Ç–µ—Ä {4} {5} –º/—Åüå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {6} –º–º.—Ä—Ç.—Å—Çüï∞\n{7}".format(city, trans[condition], str(temp_now), str(feels_temp_now), wind_trans[wind_dir], str(wind), press, itog, emodzi[condition]), reply_markup = reply_markup)

			#–î–∞–ª–µ–µ
			want_more = bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ? –í —ç—Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –≤ –¥—Ä—É–≥–æ–º?üòâ", reply_markup = markup_new_or_not)
			bot.register_next_step_handler(want_more, new_or_not)

		elif message.text == '–ù–∞ –¥–µ–Ω—åüåé':
			#–ó–∞–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
			lat = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lat"]
			lng = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lng"]
			#–ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π
			yandex_url = 'https://api.weather.yandex.ru/v2/forecast?lat='+str(lat)+'&lon='+str(lng)+'&lang=ru_RU&hours=true&extra=false'
			ya_req = requests.get(yandex_url, headers=headers)
			inf = json.loads(ya_req.text)['forecasts'][0] #–°–µ–≥–æ–¥–Ω—è
			
			#–ü–∞—Ä–∞–º–µ—Ç—Ä—ã
			sunrise = inf["sunrise"]
			sunset = inf["sunset"]
			moon = inf["moon_text"]

			#–ù–æ—á—å—é
			night = inf["parts"]["night"]
			night_temp = night["temp_avg"]
			night_cond = night["condition"]
			night_wind = night["wind_speed"]
			night_wind_dir = night["wind_dir"]
			night_press = night["pressure_mm"]

			#–£—Ç—Ä–æ–º
			morning = inf["parts"]["morning"]
			morning_temp = morning["temp_avg"]
			morning_cond = morning["condition"]
			morning_wind = morning["wind_speed"]
			morning_wind_dir = morning["wind_dir"]
			morning_press = morning["pressure_mm"]

			#–î–Ω–µ–º
			day = inf["parts"]["day"]
			day_temp = day["temp_avg"]
			day_cond = day["condition"]
			day_wind = day["wind_speed"]
			day_wind_dir = day["wind_dir"]
			day_press = day["pressure_mm"]

			#–í–µ—á–µ—Ä–æ–º
			evening = inf["parts"]["evening"]
			evening_temp = evening["temp_avg"]
			evening_cond = evening["condition"]
			evening_wind = evening["wind_speed"]
			evening_wind_dir = evening["wind_dir"]
			evening_press = evening["pressure_mm"]

			#–°–æ–æ–±—â–µ–Ω–∏–µ
			bot.send_message(message.chat.id, ("–°–µ–≥–æ–¥–Ω—è –≤ –≥–æ—Ä–æ–¥–µ {0} –≤–æ—Å—Ö–æ–¥ –≤ {1}, –∑–∞–∫–∞—Ç –≤ {2}.üè† {27}\n\nüåÉ–ù–æ—á—å—é {3}{4}.\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {5} C¬∞.üå° \n–í–µ—Ç–µ—Ä {6} {7} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {8} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\nüåÑ–£—Ç—Ä–æ–º {9}{10}.\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {11} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {12} {13} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {14} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\nüåû–î–Ω–µ–º {15}{16}.\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {17} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {18} {19} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {20} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\nüåá–í–µ—á–µ—Ä–æ–º {21}{22}.\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {23} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {24} {25} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {26} –º–º.—Ä—Ç.—Å—Çüï∞" + "\n\n–û–¥–µ–≤–∞–π—Ç–µ—Å—å –ø–æ –ø–æ–≥–æ–¥–µ!üß£").format(city, sunrise, sunset, 
				trans[night_cond], emodzi[night_cond], night_temp, wind_trans[night_wind_dir], night_wind, night_press, 
				trans[morning_cond], emodzi[morning_cond], morning_temp, wind_trans[morning_wind_dir], morning_wind, morning_press, 
				trans[day_cond], emodzi[day_cond], day_temp, wind_trans[day_wind_dir], day_wind, day_press, 
				trans[evening_cond], emodzi[evening_cond], evening_temp, wind_trans[evening_wind_dir], evening_wind, evening_press, 
				moon_trans[moon]), reply_markup = reply_markup)

			#–î–∞–ª–µ–µ
			want_more = bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ? –í —ç—Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –≤ –¥—Ä—É–≥–æ–º?üòâ", reply_markup = markup_new_or_not)
			bot.register_next_step_handler(want_more, new_or_not)

		elif message.text == "–ù–∞ 5Ô∏è‚É£ –¥–Ω–µ–π":
			#–ó–∞–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
			lat = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lat"]
			lng = json.loads(req.text)["candidates"][0]["geometry"]["location"]["lng"]
			#–ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π
			yandex_url = 'https://api.weather.yandex.ru/v2/forecast?lat='+str(lat)+'&lon='+str(lng)+'&lang=ru_RU&hours=true&extra=false'
			ya_req = requests.get(yandex_url, headers=headers)
			inf = json.loads(ya_req.text)['forecasts']
			day1 = inf[1]
			day2 = inf[2]
			day3 = inf[3]
			day4 = inf[4]
			day5 = inf[5]

			#Day1
			day1_date = day1["date"].split('-')

			#–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–∞—Ç—ã –≤ —ç–º–æ–¥–∑–∏
			if int(day1_date[2]) < 10:
				day1_day_em = nums[int(day1_date[2][1])]
			else:
				mod = int(day1_date[2]) % 10
				cel = int(day1_date[2]) // 10
				day1_day_em = nums[cel] + nums[mod]

			day1_date = day1_day_em + ' ' + month[int(day1_date[1])] + ' ' + str(day1_date[0])
			sunrise1 = day1["sunrise"]
			sunset1 = day1["sunset"]
			day1 = day1["parts"]["day_short"]
			day1_temp = day1["temp"]
			day1_feels_like = day1["feels_like"]
			day1_cond = day1["condition"]
			day1_wind = day1["wind_speed"]
			day1_wind_dir = day1["wind_dir"]
			day1_press = day1["pressure_mm"]

			#Day2
			day2_date = day2["date"].split('-')
			#–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–∞—Ç—ã –≤ —ç–º–æ–¥–∑–∏
			if int(day2_date[2])  < 10:
				day2_day_em = nums[int(day2_date[2][1])]
			else:
				mod = int(day2_date[2]) % 10
				cel = int(day2_date[2]) // 10
				day2_day_em = nums[cel] + nums[mod]

			day2_date = day2_day_em + ' ' + month[int(day2_date[1])] + ' ' + str(day2_date[0])
			sunrise2 = day2["sunrise"]
			sunset2 = day2["sunset"]
			day2 = day2["parts"]["day_short"]
			day2_temp = day2["temp"]
			day2_feels_like = day2["feels_like"]
			day2_cond = day2["condition"]
			day2_wind = day2["wind_speed"]
			day2_wind_dir = day2["wind_dir"]
			day2_press = day2["pressure_mm"]

			#Day3
			day3_date = day3["date"].split('-')
			#–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–∞—Ç—ã –≤ —ç–º–æ–¥–∑–∏
			if int(day3_date[2])  < 10:
				day3_day_em = nums[int(day3_date[2][1])]
			else:
				mod = int(day3_date[2]) % 10
				cel = int(day3_date[2]) // 10
				day3_day_em = nums[cel] + nums[mod]

			day3_date = day3_day_em + ' ' + month[int(day3_date[1])] + ' ' + str(day3_date[0])
			sunrise3 = day3["sunrise"]
			sunset3 = day3["sunset"]
			day3 = day3["parts"]["day_short"]
			day3_temp = day3["temp"]
			day3_feels_like = day3["feels_like"]
			day3_cond = day3["condition"]
			day3_wind = day3["wind_speed"]
			day3_wind_dir = day3["wind_dir"]
			day3_press = day3["pressure_mm"]

			#Day4
			day4_date = day4["date"].split('-')
			#–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–∞—Ç—ã –≤ —ç–º–æ–¥–∑–∏
			if int(day4_date[2])  < 10:
				day4_day_em = nums[int(day4_date[2][1])]
			else:
				mod = int(day4_date[2]) % 10
				cel = int(day4_date[2]) // 10
				day4_day_em = nums[cel] + nums[mod]

			day4_date = day4_day_em + ' ' + month[int(day4_date[1])] + ' ' + str(day4_date[0])
			sunrise4 = day4["sunrise"]
			sunset4 = day4["sunset"]
			day4 = day4["parts"]["day_short"]
			day4_temp = day4["temp"]
			day4_feels_like = day4["feels_like"]
			day4_cond = day4["condition"]
			day4_wind = day4["wind_speed"]
			day4_wind_dir = day4["wind_dir"]
			day4_press = day4["pressure_mm"]

			#Day5
			day5_date = day5["date"].split('-')
			#–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–∞—Ç—ã –≤ —ç–º–æ–¥–∑–∏
			if int(day5_date[2])  < 10:
				day5_day_em = nums[int(day5_date[2][1])]
			else:
				mod = int(day5_date[2]) % 10
				cel = int(day5_date[2]) // 10
				day5_day_em = nums[cel] + nums[mod]

			day5_date = day5_day_em + ' ' + month[int(day5_date[1])] + ' ' + str(day5_date[0])
			sunrise5 = day5["sunrise"]
			sunset5 = day5["sunset"]
			day5 = day5["parts"]["day_short"]
			day5_temp = day5["temp"]
			day5_feels_like = day5["feels_like"]
			day5_cond = day5["condition"]
			day5_wind = day5["wind_speed"]
			day5_wind_dir = day5["wind_dir"]
			day5_press = day5["pressure_mm"]

			#–°–æ–æ–±—â–µ–Ω–∏–µ
			bot.send_message(message.chat.id, ("üè†–í –≥–æ—Ä–æ–¥–µ {0}:\n\n{1} {2}{3} \n–í–æ—Å—Ö–æ–¥ –≤ {4}, –∑–∞–∫–∞—Ç –≤ {5}üåá\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {6} C¬∞.üå° \n–í–µ—Ç–µ—Ä {7} {8} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {9} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\n{10} {11}{12}.\n–í–æ—Å—Ö–æ–¥ –≤ {13}, –∑–∞–∫–∞—Ç –≤ {14}üåá\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {15} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {16} {17} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {18} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\n{19} {20}{21}.\n–í–æ—Å—Ö–æ–¥ –≤ {22}, –∑–∞–∫–∞—Ç –≤ {23}üåá\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {24} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {25} {26} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {27} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\n{28} {29}{30}.\n–í–æ—Å—Ö–æ–¥ –≤ {31}, –∑–∞–∫–∞—Ç –≤ {32}üåá\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {33} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {34} {35} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {36} –º–º.—Ä—Ç.—Å—Çüï∞"
				+ "\n\n{37} {38}{39}.\n–í–æ—Å—Ö–æ–¥ –≤ {40}, –∑–∞–∫–∞—Ç –≤ {41}üåá\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {42} C¬∞.üå°  \n–í–µ—Ç–µ—Ä {43} {44} –º/—Å.üå¨\n–î–∞–≤–ª–µ–Ω–∏–µ {45} –º–º.—Ä—Ç.—Å—Çüï∞" + "\n\n–ù–µ –±–æ–ª–µ–π—Ç–µ!üò∑").format(city, 
				day1_date, trans[day1_cond], emodzi[day1_cond], sunrise1, sunset1,  day1_temp, wind_trans[day1_wind_dir], day1_wind, day1_press,
				day2_date, trans[day2_cond], emodzi[day2_cond], sunrise2, sunset2,  day2_temp, wind_trans[day2_wind_dir], day2_wind, day2_press,
				day3_date, trans[day3_cond], emodzi[day3_cond], sunrise3, sunset3,  day3_temp, wind_trans[day3_wind_dir], day3_wind, day3_press,
				day4_date, trans[day4_cond], emodzi[day4_cond], sunrise4, sunset4,  day4_temp, wind_trans[day4_wind_dir], day4_wind, day4_press,
				day5_date, trans[day5_cond], emodzi[day5_cond], sunrise5, sunset5,  day5_temp, wind_trans[day5_wind_dir], day5_wind, day5_press), reply_markup = reply_markup)

			#–î–∞–ª–µ–µ
			want_more = bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ? –í —ç—Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –≤ –¥—Ä—É–≥–æ–º?üòâ", reply_markup = markup_new_or_not)
			bot.register_next_step_handler(want_more, new_or_not)

		else:
			i_dont_know = bot.send_message(message.chat.id, "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—Éüòí")
			bot.register_next_step_handler(i_dont_know, type_of_weather)

#–°–º–µ–Ω–∏—Ç—å –ª–∏ –≥–æ—Ä–æ–¥?
def new_or_not(message):
	if message.chat.type == 'private':
		if message.text == '–í —ç—Ç–æ–º –∂–µüé≤':
			#–î–∞–ª–µ–µ
			period = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥üåù", reply_markup = markup)
			bot.register_next_step_handler(period, type_of_weather)

		elif message.text == '–í –¥—Ä—É–≥–æ–ºüö´':
			another_city = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞üòÅ", reply_markup = reply_markup)
			bot.register_next_step_handler(another_city, city_of_weather)

		else:
			i_dont_know = bot.send_message(message.chat.id, "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—Éüòí")
			bot.register_next_step_handler(i_dont_know, new_or_not)

bot.polling(none_stop=True)